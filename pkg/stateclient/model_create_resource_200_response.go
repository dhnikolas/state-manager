/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateResource200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateResource200Response{}

// CreateResource200Response struct for CreateResource200Response
type CreateResource200Response struct {
	Annotations *map[string]string `json:"annotations,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CurrentVersion *int32 `json:"current_version,omitempty"`
	DeletionTimestamp *string `json:"deletion_timestamp,omitempty"`
	Finalizers []string `json:"finalizers,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Labels *map[string]string `json:"labels,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	ResourceGroup *string `json:"resource_group,omitempty"`
	ShardId string `json:"shard_id"`
	Spec map[string]interface{} `json:"spec,omitempty"`
	Status map[string]interface{} `json:"status,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

type _CreateResource200Response CreateResource200Response

// NewCreateResource200Response instantiates a new CreateResource200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateResource200Response(shardId string) *CreateResource200Response {
	this := CreateResource200Response{}
	this.ShardId = shardId
	return &this
}

// NewCreateResource200ResponseWithDefaults instantiates a new CreateResource200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateResource200ResponseWithDefaults() *CreateResource200Response {
	this := CreateResource200Response{}
	return &this
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *CreateResource200Response) GetAnnotations() map[string]string {
	if o == nil || IsNil(o.Annotations) {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *CreateResource200Response) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *CreateResource200Response) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CreateResource200Response) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CreateResource200Response) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CreateResource200Response) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCurrentVersion returns the CurrentVersion field value if set, zero value otherwise.
func (o *CreateResource200Response) GetCurrentVersion() int32 {
	if o == nil || IsNil(o.CurrentVersion) {
		var ret int32
		return ret
	}
	return *o.CurrentVersion
}

// GetCurrentVersionOk returns a tuple with the CurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetCurrentVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentVersion) {
		return nil, false
	}
	return o.CurrentVersion, true
}

// HasCurrentVersion returns a boolean if a field has been set.
func (o *CreateResource200Response) HasCurrentVersion() bool {
	if o != nil && !IsNil(o.CurrentVersion) {
		return true
	}

	return false
}

// SetCurrentVersion gets a reference to the given int32 and assigns it to the CurrentVersion field.
func (o *CreateResource200Response) SetCurrentVersion(v int32) {
	o.CurrentVersion = &v
}

// GetDeletionTimestamp returns the DeletionTimestamp field value if set, zero value otherwise.
func (o *CreateResource200Response) GetDeletionTimestamp() string {
	if o == nil || IsNil(o.DeletionTimestamp) {
		var ret string
		return ret
	}
	return *o.DeletionTimestamp
}

// GetDeletionTimestampOk returns a tuple with the DeletionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetDeletionTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.DeletionTimestamp) {
		return nil, false
	}
	return o.DeletionTimestamp, true
}

// HasDeletionTimestamp returns a boolean if a field has been set.
func (o *CreateResource200Response) HasDeletionTimestamp() bool {
	if o != nil && !IsNil(o.DeletionTimestamp) {
		return true
	}

	return false
}

// SetDeletionTimestamp gets a reference to the given string and assigns it to the DeletionTimestamp field.
func (o *CreateResource200Response) SetDeletionTimestamp(v string) {
	o.DeletionTimestamp = &v
}

// GetFinalizers returns the Finalizers field value if set, zero value otherwise.
func (o *CreateResource200Response) GetFinalizers() []string {
	if o == nil || IsNil(o.Finalizers) {
		var ret []string
		return ret
	}
	return o.Finalizers
}

// GetFinalizersOk returns a tuple with the Finalizers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetFinalizersOk() ([]string, bool) {
	if o == nil || IsNil(o.Finalizers) {
		return nil, false
	}
	return o.Finalizers, true
}

// HasFinalizers returns a boolean if a field has been set.
func (o *CreateResource200Response) HasFinalizers() bool {
	if o != nil && !IsNil(o.Finalizers) {
		return true
	}

	return false
}

// SetFinalizers gets a reference to the given []string and assigns it to the Finalizers field.
func (o *CreateResource200Response) SetFinalizers(v []string) {
	o.Finalizers = v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CreateResource200Response) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CreateResource200Response) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CreateResource200Response) SetKind(v string) {
	o.Kind = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreateResource200Response) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateResource200Response) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *CreateResource200Response) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateResource200Response) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateResource200Response) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateResource200Response) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *CreateResource200Response) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *CreateResource200Response) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *CreateResource200Response) SetNamespace(v string) {
	o.Namespace = &v
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise.
func (o *CreateResource200Response) GetResourceGroup() string {
	if o == nil || IsNil(o.ResourceGroup) {
		var ret string
		return ret
	}
	return *o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroup) {
		return nil, false
	}
	return o.ResourceGroup, true
}

// HasResourceGroup returns a boolean if a field has been set.
func (o *CreateResource200Response) HasResourceGroup() bool {
	if o != nil && !IsNil(o.ResourceGroup) {
		return true
	}

	return false
}

// SetResourceGroup gets a reference to the given string and assigns it to the ResourceGroup field.
func (o *CreateResource200Response) SetResourceGroup(v string) {
	o.ResourceGroup = &v
}

// GetShardId returns the ShardId field value
func (o *CreateResource200Response) GetShardId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShardId
}

// GetShardIdOk returns a tuple with the ShardId field value
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetShardIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShardId, true
}

// SetShardId sets field value
func (o *CreateResource200Response) SetShardId(v string) {
	o.ShardId = v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *CreateResource200Response) GetSpec() map[string]interface{} {
	if o == nil || IsNil(o.Spec) {
		var ret map[string]interface{}
		return ret
	}
	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetSpecOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Spec) {
		return map[string]interface{}{}, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *CreateResource200Response) HasSpec() bool {
	if o != nil && !IsNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given map[string]interface{} and assigns it to the Spec field.
func (o *CreateResource200Response) SetSpec(v map[string]interface{}) {
	o.Spec = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateResource200Response) GetStatus() map[string]interface{} {
	if o == nil || IsNil(o.Status) {
		var ret map[string]interface{}
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetStatusOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Status) {
		return map[string]interface{}{}, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateResource200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given map[string]interface{} and assigns it to the Status field.
func (o *CreateResource200Response) SetStatus(v map[string]interface{}) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CreateResource200Response) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CreateResource200Response) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CreateResource200Response) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CreateResource200Response) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResource200Response) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CreateResource200Response) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *CreateResource200Response) SetVersion(v int32) {
	o.Version = &v
}

func (o CreateResource200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateResource200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CurrentVersion) {
		toSerialize["current_version"] = o.CurrentVersion
	}
	if !IsNil(o.DeletionTimestamp) {
		toSerialize["deletion_timestamp"] = o.DeletionTimestamp
	}
	if !IsNil(o.Finalizers) {
		toSerialize["finalizers"] = o.Finalizers
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.ResourceGroup) {
		toSerialize["resource_group"] = o.ResourceGroup
	}
	toSerialize["shard_id"] = o.ShardId
	if !IsNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

func (o *CreateResource200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shard_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateResource200Response := _CreateResource200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateResource200Response)

	if err != nil {
		return err
	}

	*o = CreateResource200Response(varCreateResource200Response)

	return err
}

type NullableCreateResource200Response struct {
	value *CreateResource200Response
	isSet bool
}

func (v NullableCreateResource200Response) Get() *CreateResource200Response {
	return v.value
}

func (v *NullableCreateResource200Response) Set(val *CreateResource200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateResource200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateResource200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateResource200Response(val *CreateResource200Response) *NullableCreateResource200Response {
	return &NullableCreateResource200Response{value: val, isSet: true}
}

func (v NullableCreateResource200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateResource200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


