/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InternalHttpUpdateResourceStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternalHttpUpdateResourceStatusRequest{}

// InternalHttpUpdateResourceStatusRequest struct for InternalHttpUpdateResourceStatusRequest
type InternalHttpUpdateResourceStatusRequest struct {
	Annotations *map[string]string `json:"annotations,omitempty"`
	CurrentVersion *int32 `json:"current_version,omitempty"`
	Labels *map[string]string `json:"labels,omitempty"`
	ShardId string `json:"shard_id"`
	Status []int32 `json:"status,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

type _InternalHttpUpdateResourceStatusRequest InternalHttpUpdateResourceStatusRequest

// NewInternalHttpUpdateResourceStatusRequest instantiates a new InternalHttpUpdateResourceStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalHttpUpdateResourceStatusRequest(shardId string) *InternalHttpUpdateResourceStatusRequest {
	this := InternalHttpUpdateResourceStatusRequest{}
	this.ShardId = shardId
	return &this
}

// NewInternalHttpUpdateResourceStatusRequestWithDefaults instantiates a new InternalHttpUpdateResourceStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalHttpUpdateResourceStatusRequestWithDefaults() *InternalHttpUpdateResourceStatusRequest {
	this := InternalHttpUpdateResourceStatusRequest{}
	return &this
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *InternalHttpUpdateResourceStatusRequest) GetAnnotations() map[string]string {
	if o == nil || IsNil(o.Annotations) {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalHttpUpdateResourceStatusRequest) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *InternalHttpUpdateResourceStatusRequest) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *InternalHttpUpdateResourceStatusRequest) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

// GetCurrentVersion returns the CurrentVersion field value if set, zero value otherwise.
func (o *InternalHttpUpdateResourceStatusRequest) GetCurrentVersion() int32 {
	if o == nil || IsNil(o.CurrentVersion) {
		var ret int32
		return ret
	}
	return *o.CurrentVersion
}

// GetCurrentVersionOk returns a tuple with the CurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalHttpUpdateResourceStatusRequest) GetCurrentVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentVersion) {
		return nil, false
	}
	return o.CurrentVersion, true
}

// HasCurrentVersion returns a boolean if a field has been set.
func (o *InternalHttpUpdateResourceStatusRequest) HasCurrentVersion() bool {
	if o != nil && !IsNil(o.CurrentVersion) {
		return true
	}

	return false
}

// SetCurrentVersion gets a reference to the given int32 and assigns it to the CurrentVersion field.
func (o *InternalHttpUpdateResourceStatusRequest) SetCurrentVersion(v int32) {
	o.CurrentVersion = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *InternalHttpUpdateResourceStatusRequest) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalHttpUpdateResourceStatusRequest) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *InternalHttpUpdateResourceStatusRequest) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *InternalHttpUpdateResourceStatusRequest) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetShardId returns the ShardId field value
func (o *InternalHttpUpdateResourceStatusRequest) GetShardId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShardId
}

// GetShardIdOk returns a tuple with the ShardId field value
// and a boolean to check if the value has been set.
func (o *InternalHttpUpdateResourceStatusRequest) GetShardIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShardId, true
}

// SetShardId sets field value
func (o *InternalHttpUpdateResourceStatusRequest) SetShardId(v string) {
	o.ShardId = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InternalHttpUpdateResourceStatusRequest) GetStatus() []int32 {
	if o == nil || IsNil(o.Status) {
		var ret []int32
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalHttpUpdateResourceStatusRequest) GetStatusOk() ([]int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InternalHttpUpdateResourceStatusRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []int32 and assigns it to the Status field.
func (o *InternalHttpUpdateResourceStatusRequest) SetStatus(v []int32) {
	o.Status = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InternalHttpUpdateResourceStatusRequest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalHttpUpdateResourceStatusRequest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InternalHttpUpdateResourceStatusRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *InternalHttpUpdateResourceStatusRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o InternalHttpUpdateResourceStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalHttpUpdateResourceStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	if !IsNil(o.CurrentVersion) {
		toSerialize["current_version"] = o.CurrentVersion
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["shard_id"] = o.ShardId
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

func (o *InternalHttpUpdateResourceStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shard_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInternalHttpUpdateResourceStatusRequest := _InternalHttpUpdateResourceStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInternalHttpUpdateResourceStatusRequest)

	if err != nil {
		return err
	}

	*o = InternalHttpUpdateResourceStatusRequest(varInternalHttpUpdateResourceStatusRequest)

	return err
}

type NullableInternalHttpUpdateResourceStatusRequest struct {
	value *InternalHttpUpdateResourceStatusRequest
	isSet bool
}

func (v NullableInternalHttpUpdateResourceStatusRequest) Get() *InternalHttpUpdateResourceStatusRequest {
	return v.value
}

func (v *NullableInternalHttpUpdateResourceStatusRequest) Set(val *InternalHttpUpdateResourceStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalHttpUpdateResourceStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalHttpUpdateResourceStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalHttpUpdateResourceStatusRequest(val *InternalHttpUpdateResourceStatusRequest) *NullableInternalHttpUpdateResourceStatusRequest {
	return &NullableInternalHttpUpdateResourceStatusRequest{value: val, isSet: true}
}

func (v NullableInternalHttpUpdateResourceStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalHttpUpdateResourceStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


