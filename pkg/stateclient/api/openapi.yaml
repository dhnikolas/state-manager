openapi: 3.0.1
info:
  contact: {}
servers:
- url: /
paths:
  /api/v1/groups/{resource_group}/namespaces/{namespace}/kinds/{kind}/resources:
    post:
      description: Creates a new resource with the provided details.
      operationId: createResource
      parameters:
      - description: Resource Group
        in: path
        name: resource_group
        required: true
        schema:
          type: string
      - description: Kind
        in: path
        name: kind
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createResource_request'
        description: Resource details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResource_200_response'
          description: Resource created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Invalid input\" example={\"error\":\"Validation failed: shard_id\
            \ is required\"}"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Server error\" example={\"error\":\"Failed to create resource:\
            \ database error\"}"
      summary: Create a new resource
      tags:
      - resources
      x-codegen-request-body-name: resource
  /api/v1/groups/{resource_group}/namespaces/{namespace}/kinds/{kind}/resources/{name}:
    delete:
      description: "Delete a resource by its resource_group, kind, namespace, and\
        \ name."
      operationId: deleteResource
      parameters:
      - description: Resource Group
        in: path
        name: resource_group
        required: true
        schema:
          type: string
      - description: Kind
        in: path
        name: kind
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Invalid input\" example={\"error\":\"Deletion failed: resource_group\
            \ is required\"}"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Not found\" example={\"error\":\"Resource not found: no rows\"\
            }"
      summary: Delete a resource
      tags:
      - resources
    get:
      description: "Retrieves a resource by its resource_group, kind, namespace, and\
        \ name."
      operationId: getResource
      parameters:
      - description: Resource Group
        in: path
        name: resource_group
        required: true
        schema:
          type: string
      - description: Kind
        in: path
        name: kind
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResource_200_response'
          description: Resource found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Invalid input\" example={\"error\":\"Validation failed: resource_group\
            \ is required\"}"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Not found\" example={\"error\":\"Resource not found: no rows\"\
            }"
      summary: Get a resource by key
      tags:
      - resources
    put:
      description: Updates a resource with the provided details.
      operationId: updateResource
      parameters:
      - description: Resource Group
        in: path
        name: resource_group
        required: true
        schema:
          type: string
      - description: Kind
        in: path
        name: kind
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Name
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateResource_request'
        description: Resource details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResource_200_response'
          description: Resource updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Invalid input\" example={\"error\":\"Validation failed: shard_id\
            \ is required\"}"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Server error\" example={\"error\":\"Failed to update resource:\
            \ database error\"}"
      summary: Update a resource
      tags:
      - resources
      x-codegen-request-body-name: resource
  /api/v1/groups/{resource_group}/namespaces/{namespace}/kinds/{kind}/resources/{name}/status:
    put:
      description: Updates a resource with the provided details.
      operationId: updateResourceStatus
      parameters:
      - description: Resource Group
        in: path
        name: resource_group
        required: true
        schema:
          type: string
      - description: Kind
        in: path
        name: kind
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Name
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateResourceStatus_request'
        description: Resource details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResource_200_response'
          description: Resource updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Invalid input\" example={\"error\":\"Validation failed: shard_id\
            \ is required\"}"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Invalid input\" example={\"error\":\"Version conflict: resource\
            \ version not match\"}"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Server error\" example={\"error\":\"Failed to update resource:\
            \ database error\"}"
      summary: Update a resource
      tags:
      - resources
      x-codegen-request-body-name: resource
  /api/v1/resources:
    get:
      description: возвращает ресурсы по фильтру
      operationId: listResources
      parameters:
      - in: query
        name: kind
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pending
        schema:
          type: boolean
      - in: query
        name: resource_group
        schema:
          type: string
      - in: query
        name: shard_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResource_200_response'
          description: List of pending resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Invalid input\" example={\"error\":\"shard_ids is required\"\
            }"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_http.ErrorResponse'
          description: "Server error\" example={\"error\":\"Failed to list pending\
            \ resources: database error\"}"
      summary: List pending resources
      tags:
      - resources
components:
  schemas:
    github_com_dhnikolas_state-manager_internal_dto.Resource:
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        created_at:
          type: string
        current_version:
          type: integer
        deletion_timestamp:
          type: string
        finalizers:
          items:
            type: string
          type: array
        kind:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        namespace:
          type: string
        resource_group:
          type: string
        shard_id:
          type: string
        spec:
          items:
            type: integer
          type: array
        status:
          items:
            type: integer
          type: array
        updated_at:
          type: string
        version:
          type: integer
      required:
      - shard_id
      type: object
    internal_http.CreateResourceRequest:
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        finalizers:
          items:
            type: string
          type: array
        labels:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        shard_id:
          type: string
        spec:
          items:
            type: integer
          type: array
      required:
      - name
      - shard_id
      type: object
    internal_http.ErrorResponse:
      example:
        error: error
      properties:
        error:
          type: string
      type: object
    internal_http.UpdateResourceRequest:
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        labels:
          additionalProperties:
            type: string
          type: object
        shard_id:
          type: string
        spec:
          items:
            type: integer
          type: array
      required:
      - shard_id
      type: object
    internal_http.UpdateResourceStatusRequest:
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        current_version:
          type: integer
        labels:
          additionalProperties:
            type: string
          type: object
        shard_id:
          type: string
        status:
          items:
            type: integer
          type: array
        version:
          type: integer
      required:
      - shard_id
      type: object
    createResource_request:
      allOf:
      - $ref: '#/components/schemas/internal_http.CreateResourceRequest'
      - properties:
          spec:
            additionalProperties: true
            type: object
        type: object
    createResource_200_response:
      allOf:
      - $ref: '#/components/schemas/github_com_dhnikolas_state-manager_internal_dto.Resource'
      - properties:
          spec:
            additionalProperties: true
            type: object
          status:
            additionalProperties: true
            type: object
        type: object
      example:
        finalizers:
        - finalizers
        - finalizers
        kind: kind
        annotations:
          key: annotations
        created_at: created_at
        current_version: 0
        deletion_timestamp: deletion_timestamp
        version: 5
        spec:
          key: ""
        labels:
          key: labels
        resource_group: resource_group
        updated_at: updated_at
        shard_id: shard_id
        name: name
        namespace: namespace
        status:
          key: ""
    updateResource_request:
      allOf:
      - $ref: '#/components/schemas/internal_http.UpdateResourceRequest'
      - properties:
          spec:
            additionalProperties: true
            type: object
        type: object
    updateResourceStatus_request:
      allOf:
      - $ref: '#/components/schemas/internal_http.UpdateResourceStatusRequest'
      - properties:
          status:
            additionalProperties: true
            type: object
        type: object
x-original-swagger-version: "2.0"
