// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/groups/{resource_group}/namespaces/{namespace}/kinds/{kind}/resources": {
            "post": {
                "description": "Creates a new resource with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Create a new resource",
                "operationId": "createResource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Group",
                        "name": "resource_group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource details",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_http.CreateResourceRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "spec": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_dhnikolas_state-manager_internal_dto.Resource"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "spec": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "status": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input\" example={\"error\":\"Validation failed: shard_id is required\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error\" example={\"error\":\"Failed to create resource: database error\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/groups/{resource_group}/namespaces/{namespace}/kinds/{kind}/resources/{name}": {
            "get": {
                "description": "Retrieves a resource by its resource_group, kind, namespace, and name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Get a resource by key",
                "operationId": "getResource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Group",
                        "name": "resource_group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_dhnikolas_state-manager_internal_dto.Resource"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "spec": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "status": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input\" example={\"error\":\"Validation failed: resource_group is required\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found\" example={\"error\":\"Resource not found: no rows\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a resource with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Update a resource",
                "operationId": "updateResource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Group",
                        "name": "resource_group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource details",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_http.UpdateResourceRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "spec": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_dhnikolas_state-manager_internal_dto.Resource"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "spec": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "status": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input\" example={\"error\":\"Validation failed: shard_id is required\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error\" example={\"error\":\"Failed to update resource: database error\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a resource by its resource_group, kind, namespace, and name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Delete a resource",
                "operationId": "deleteResource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Group",
                        "name": "resource_group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid input\" example={\"error\":\"Deletion failed: resource_group is required\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found\" example={\"error\":\"Resource not found: no rows\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/groups/{resource_group}/namespaces/{namespace}/kinds/{kind}/resources/{name}/status": {
            "put": {
                "description": "Updates a resource with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Update a resource",
                "operationId": "updateResourceStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Group",
                        "name": "resource_group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource details",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_http.UpdateResourceStatusRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_dhnikolas_state-manager_internal_dto.Resource"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "spec": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "status": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input\" example={\"error\":\"Validation failed: shard_id is required\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Invalid input\" example={\"error\":\"Version conflict: resource version not match\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error\" example={\"error\":\"Failed to update resource: database error\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/resources": {
            "get": {
                "description": "возвращает ресурсы по фильтру",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "List pending resources",
                "operationId": "listResources",
                "parameters": [
                    {
                        "type": "string",
                        "name": "kind",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "resource_group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "shard_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pending resources",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_dhnikolas_state-manager_internal_dto.Resource"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "spec": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "status": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input\" example={\"error\":\"shard_ids is required\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error\" example={\"error\":\"Failed to list pending resources: database error\"}",
                        "schema": {
                            "$ref": "#/definitions/internal_http.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_dhnikolas_state-manager_internal_dto.Resource": {
            "type": "object",
            "required": [
                "shard_id"
            ],
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "current_version": {
                    "type": "integer"
                },
                "deletion_timestamp": {
                    "type": "string"
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "resource_group": {
                    "type": "string"
                },
                "shard_id": {
                    "type": "string"
                },
                "spec": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "internal_http.CreateResourceRequest": {
            "type": "object",
            "required": [
                "name",
                "shard_id"
            ],
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "shard_id": {
                    "type": "string"
                },
                "spec": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "internal_http.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "internal_http.UpdateResourceRequest": {
            "type": "object",
            "required": [
                "shard_id"
            ],
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "shard_id": {
                    "type": "string"
                },
                "spec": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "internal_http.UpdateResourceStatusRequest": {
            "type": "object",
            "required": [
                "shard_id"
            ],
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "current_version": {
                    "type": "integer"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "shard_id": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
